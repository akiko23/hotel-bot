[build-system]
requires = ["setuptools>=65.5.0"]
build-backend = "setuptools.build_meta"

[project]
name = "hotel-bot"
version = "0.1.0"
description = "A bot for a hotel that allows you to book rooms, contact the administrator and much more via Telegram."
authors = [
    {name = "akiko23", email = "dmvasilenko43@gmail.com"},
]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.10"

dependencies = [
    "aiogram==3.3.0",
    "aiogram_dialog==2.1.0",
    "alembic==1.12.1",
    "asyncpg==0.29.0",
    "redis==5.0.1",
    "SQLAlchemy==2.0.23",
    "tomli==2.0.1",
]

[project.optional-dependencies]
test = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "httpx==0.25.2",
]
lint = [
    "mypy==1.8.0",
    "black==23.11.0",
    "isort==5.12.0",
    "ruff==0.1.6",
    "bandit==1.7.5", 
]

[project.urls]
"Homepage" = "https://github.com/akiko23/hotel-bot"
"Bug Tracker" = "https://github.com/akiko23/hotel-bot/issues"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
pythonpath = [
    ".",
    "src",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "build",
    "dist",
    "alembic/versions",
    "venv",
]

# Same as Black.
line-length = 98
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


# Isort configuration
[tool.isort]
skip = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "build",
    "dist",
    "alembic/versions",
    "venv",
]
include_trailing_comma = true
use_parentheses = true
multi_line_output = 3


[tool.mypy]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "build",
    "dist",
    "alembic/versions",
    "venv",
]
strict = true
python_version = "3.8"
ignore_missing_imports = true
install_types = true
non_interactive = true
plugins = [
    "sqlalchemy.ext.mypy.plugin",
]

# from https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = false

disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = false